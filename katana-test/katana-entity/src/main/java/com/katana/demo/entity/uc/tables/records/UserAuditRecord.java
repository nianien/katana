/*
 * This file is generated by jOOQ.
 */
package com.katana.demo.entity.uc.tables.records;


import com.katana.demo.entity.uc.tables.UserAudit;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户审核表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserAuditRecord extends UpdatableRecordImpl<UserAuditRecord> implements Record7<Long, String, Integer, Long, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>uc.user_audit.userid</code>. 用户ID
     */
    public void setUserid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>uc.user_audit.userid</code>. 用户ID
     */
    public Long getUserid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>uc.user_audit.name</code>. 用户名
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>uc.user_audit.name</code>. 用户名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>uc.user_audit.audit_state</code>.
     * 审核状态，0表示审核通过，1表示审核中，2表示审核拒绝，5待提交至审核(搁置)
     */
    public void setAuditState(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>uc.user_audit.audit_state</code>.
     * 审核状态，0表示审核通过，1表示审核中，2表示审核拒绝，5待提交至审核(搁置)
     */
    public Integer getAuditState() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>uc.user_audit.auditor_id</code>. 审核员id
     */
    public void setAuditorId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>uc.user_audit.auditor_id</code>. 审核员id
     */
    public Long getAuditorId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>uc.user_audit.reason_code</code>. 拒绝理由
     */
    public void setReasonCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>uc.user_audit.reason_code</code>. 拒绝理由
     */
    public String getReasonCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>uc.user_audit.refuse_reason</code>. 拒绝原因
     */
    public void setRefuseReason(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>uc.user_audit.refuse_reason</code>. 拒绝原因
     */
    public String getRefuseReason() {
        return (String) get(5);
    }

    /**
     * Setter for <code>uc.user_audit.env</code>. 环境标
     */
    public void setEnv(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>uc.user_audit.env</code>. 环境标
     */
    public String getEnv() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Integer, Long, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Integer, Long, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserAudit.USER_AUDIT.USERID;
    }

    @Override
    public Field<String> field2() {
        return UserAudit.USER_AUDIT.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return UserAudit.USER_AUDIT.AUDIT_STATE;
    }

    @Override
    public Field<Long> field4() {
        return UserAudit.USER_AUDIT.AUDITOR_ID;
    }

    @Override
    public Field<String> field5() {
        return UserAudit.USER_AUDIT.REASON_CODE;
    }

    @Override
    public Field<String> field6() {
        return UserAudit.USER_AUDIT.REFUSE_REASON;
    }

    @Override
    public Field<String> field7() {
        return UserAudit.USER_AUDIT.ENV;
    }

    @Override
    public Long component1() {
        return getUserid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getAuditState();
    }

    @Override
    public Long component4() {
        return getAuditorId();
    }

    @Override
    public String component5() {
        return getReasonCode();
    }

    @Override
    public String component6() {
        return getRefuseReason();
    }

    @Override
    public String component7() {
        return getEnv();
    }

    @Override
    public Long value1() {
        return getUserid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getAuditState();
    }

    @Override
    public Long value4() {
        return getAuditorId();
    }

    @Override
    public String value5() {
        return getReasonCode();
    }

    @Override
    public String value6() {
        return getRefuseReason();
    }

    @Override
    public String value7() {
        return getEnv();
    }

    @Override
    public UserAuditRecord value1(Long value) {
        setUserid(value);
        return this;
    }

    @Override
    public UserAuditRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserAuditRecord value3(Integer value) {
        setAuditState(value);
        return this;
    }

    @Override
    public UserAuditRecord value4(Long value) {
        setAuditorId(value);
        return this;
    }

    @Override
    public UserAuditRecord value5(String value) {
        setReasonCode(value);
        return this;
    }

    @Override
    public UserAuditRecord value6(String value) {
        setRefuseReason(value);
        return this;
    }

    @Override
    public UserAuditRecord value7(String value) {
        setEnv(value);
        return this;
    }

    @Override
    public UserAuditRecord values(Long value1, String value2, Integer value3, Long value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAuditRecord
     */
    public UserAuditRecord() {
        super(UserAudit.USER_AUDIT);
    }

    /**
     * Create a detached, initialised UserAuditRecord
     */
    public UserAuditRecord(Long userid, String name, Integer auditState, Long auditorId, String reasonCode, String refuseReason, String env) {
        super(UserAudit.USER_AUDIT);

        setUserid(userid);
        setName(name);
        setAuditState(auditState);
        setAuditorId(auditorId);
        setReasonCode(reasonCode);
        setRefuseReason(refuseReason);
        setEnv(env);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserAuditRecord
     */
    public UserAuditRecord(com.katana.demo.entity.uc.tables.pojos.UserAudit value) {
        super(UserAudit.USER_AUDIT);

        if (value != null) {
            setUserid(value.getUserid());
            setName(value.getName());
            setAuditState(value.getAuditState());
            setAuditorId(value.getAuditorId());
            setReasonCode(value.getReasonCode());
            setRefuseReason(value.getRefuseReason());
            setEnv(value.getEnv());
            resetChangedOnNotNull();
        }
    }
}
